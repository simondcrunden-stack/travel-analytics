# Generated by Django 4.2.7 on 2025-10-14 21:52

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("organizations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Budget",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("cost_center", models.CharField(max_length=100)),
                ("cost_center_name", models.CharField(max_length=200)),
                (
                    "total_budget",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "air_budget",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "accommodation_budget",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "car_hire_budget",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "other_budget",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("currency", models.CharField(default="AUD", max_length=3)),
                ("warning_threshold", models.IntegerField(default=80)),
                ("critical_threshold", models.IntegerField(default=95)),
                ("is_active", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="budgets_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "budgets",
            },
        ),
        migrations.CreateModel(
            name="FiscalYear",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "fiscal_year_type",
                    models.CharField(
                        choices=[
                            ("AUS", "Australia (1 Jul - 30 Jun)"),
                            ("UK", "United Kingdom (1 Apr - 31 Mar)"),
                            ("EU", "Europe (1 Jan - 31 Dec)"),
                            ("USA", "United States (1 Jan - 31 Dec)"),
                            ("CALENDAR", "Calendar Year (1 Jan - 31 Dec)"),
                            ("CUSTOM", "Custom Period"),
                        ],
                        max_length=20,
                    ),
                ),
                ("year_label", models.CharField(max_length=20)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("is_active", models.BooleanField(default=True)),
                ("is_current", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fiscal_years",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "db_table": "fiscal_years",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="BudgetAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("WARNING", "Warning Threshold Reached"),
                            ("CRITICAL", "Critical Threshold Reached"),
                            ("EXCEEDED", "Budget Exceeded"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "percentage_used",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("amount_spent", models.DecimalField(decimal_places=2, max_digits=12)),
                ("notification_sent_at", models.DateTimeField(blank=True, null=True)),
                ("is_acknowledged", models.BooleanField(default=False)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="budget_alerts_acknowledged",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "budget",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="budgets.budget",
                    ),
                ),
                (
                    "notified_users",
                    models.ManyToManyField(
                        related_name="budget_alerts_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "budget_alerts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="budget",
            name="fiscal_year",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="budgets",
                to="budgets.fiscalyear",
            ),
        ),
        migrations.AddField(
            model_name="budget",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="budgets",
                to="organizations.organization",
            ),
        ),
        migrations.AddIndex(
            model_name="fiscalyear",
            index=models.Index(
                fields=["organization", "is_current"],
                name="fiscal_year_organiz_33dbdb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="fiscalyear",
            index=models.Index(
                fields=["start_date", "end_date"], name="fiscal_year_start_d_aeb9a1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="fiscalyear",
            unique_together={("organization", "year_label")},
        ),
        migrations.AddIndex(
            model_name="budgetalert",
            index=models.Index(
                fields=["budget", "created_at"], name="budget_aler_budget__b989ba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="budgetalert",
            index=models.Index(
                fields=["alert_type", "is_acknowledged"],
                name="budget_aler_alert_t_62dda1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="budget",
            index=models.Index(
                fields=["organization", "fiscal_year", "cost_center"],
                name="budgets_organiz_edaef8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="budget",
            index=models.Index(
                fields=["fiscal_year", "is_active"], name="budgets_fiscal__417708_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="budget",
            unique_together={("organization", "fiscal_year", "cost_center")},
        ),
    ]
