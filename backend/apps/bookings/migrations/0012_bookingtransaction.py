# Generated by Django 5.2.7 on 2025-10-30 21:12

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("bookings", "0011_airbooking_base_fare_airbooking_currency_and_more"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BookingTransaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("object_id", models.UUIDField(verbose_name="Booking ID")),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("ORIGINAL", "Original Booking"),
                            ("EXCHANGE", "Ticket Exchange"),
                            ("REISSUE", "Ticket Reissue"),
                            ("VOID", "Ticket Void"),
                            ("MODIFICATION", "Booking Modification"),
                            ("DATE_CHANGE", "Date Change"),
                            ("UPGRADE", "Upgrade"),
                            ("DOWNGRADE", "Downgrade"),
                            ("CANCELLATION", "Cancellation"),
                            ("PARTIAL_CANCELLATION", "Partial Cancellation"),
                            ("REFUND", "Refund"),
                            ("PARTIAL_REFUND", "Partial Refund"),
                            ("ADJUSTMENT", "Price Adjustment"),
                            ("CREDIT", "Credit"),
                            ("DEBIT", "Debit"),
                            ("FEE_ADJUSTMENT", "Fee Adjustment"),
                        ],
                        db_index=True,
                        help_text="Type of transaction (original, exchange, refund, etc.)",
                        max_length=30,
                    ),
                ),
                (
                    "transaction_date",
                    models.DateField(
                        db_index=True, help_text="Date the transaction was processed"
                    ),
                ),
                (
                    "transaction_reference",
                    models.CharField(
                        blank=True,
                        help_text="External reference (ticket number, confirmation code, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("CONFIRMED", "Confirmed"),
                            ("CANCELLED", "Cancelled"),
                            ("REFUNDED", "Refunded"),
                        ],
                        db_index=True,
                        default="CONFIRMED",
                        max_length=20,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AUD",
                        help_text="Transaction currency (e.g., AUD, USD, EUR)",
                        max_length=3,
                    ),
                ),
                (
                    "base_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Base fare/rate amount (can be negative for refunds)",
                        max_digits=10,
                    ),
                ),
                (
                    "taxes",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Tax amount (can be negative for refunds)",
                        max_digits=10,
                    ),
                ),
                (
                    "fees",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Fees charged (can be negative for credits)",
                        max_digits=10,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        help_text="Total transaction amount (base + taxes + fees). Negative = refund/credit",
                        max_digits=10,
                    ),
                ),
                (
                    "base_amount_base",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Base amount converted to organization base currency",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "taxes_base",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Taxes converted to organization base currency",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "fees_base",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Fees converted to organization base currency",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "total_amount_base",
                    models.DecimalField(
                        blank=True,
                        db_index=True,
                        decimal_places=2,
                        help_text="Total amount in organization base currency",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "exchange_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Exchange rate used for currency conversion",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        blank=True,
                        help_text="Reason for transaction (why was ticket exchanged, booking cancelled, etc.)",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes, comments, or details"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        limit_choices_to={
                            "model__in": (
                                "airbooking",
                                "accommodationbooking",
                                "carhirebooking",
                                "servicefee",
                            )
                        },
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Booking Type",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this transaction record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Booking Transaction",
                "verbose_name_plural": "Booking Transactions",
                "db_table": "booking_transactions",
                "ordering": ["transaction_date", "created_at"],
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="booking_tra_content_fcc661_idx",
                    ),
                    models.Index(
                        fields=["transaction_type", "transaction_date"],
                        name="booking_tra_transac_7b40f6_idx",
                    ),
                    models.Index(
                        fields=["status", "transaction_date"],
                        name="booking_tra_status_78effd_idx",
                    ),
                    models.Index(
                        fields=["transaction_date", "total_amount"],
                        name="booking_tra_transac_76c90d_idx",
                    ),
                    models.Index(
                        fields=["currency", "transaction_date"],
                        name="booking_tra_currenc_5aeb86_idx",
                    ),
                ],
            },
        ),
    ]
