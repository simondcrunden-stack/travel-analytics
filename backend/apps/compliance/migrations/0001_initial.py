# Generated by Django 4.2.7 on 2025-10-14 23:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("organizations", "0001_initial"),
        ("bookings", "0002_booking"),
    ]

    operations = [
        migrations.CreateModel(
            name="ComplianceRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("LOWEST_FARE", "Lowest Fare Selection"),
                            ("ADVANCE_BOOKING", "Advance Booking Period"),
                            ("TRAVEL_CLASS", "Class of Travel"),
                            ("PREFERRED_SUPPLIER", "Preferred Supplier"),
                            ("BOOKING_CHANNEL", "Booking Channel (Online vs Offline)"),
                            ("TRIP_DURATION", "Trip Duration Limits"),
                            ("DAILY_RATE", "Daily Rate Limits"),
                            ("CUSTOM", "Custom Rule"),
                        ],
                        max_length=30,
                    ),
                ),
                ("rule_name", models.CharField(max_length=200)),
                ("rule_description", models.TextField(blank=True)),
                (
                    "product_type",
                    models.CharField(
                        choices=[
                            ("AIR", "Air Travel"),
                            ("HOTEL", "Accommodation"),
                            ("CAR", "Car Hire"),
                            ("ALL", "All Products"),
                        ],
                        max_length=20,
                    ),
                ),
                ("rule_parameters", models.JSONField(blank=True, default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("is_enforced", models.BooleanField(default=True)),
                ("effective_from", models.DateField()),
                ("effective_until", models.DateField(blank=True, null=True)),
                ("priority", models.IntegerField(default=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="compliance_rules_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compliance_rules",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "db_table": "compliance_rules",
                "ordering": ["priority", "rule_name"],
            },
        ),
        migrations.CreateModel(
            name="HighRiskDestination",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "destination_type",
                    models.CharField(
                        choices=[
                            ("COUNTRY", "Entire Country"),
                            ("REGION", "Specific Region/State"),
                            ("CITY", "Specific City"),
                            ("RADIUS", "Radius Around Location"),
                        ],
                        max_length=20,
                    ),
                ),
                ("country_code", models.CharField(max_length=3)),
                ("country_name", models.CharField(max_length=100)),
                ("region_name", models.CharField(blank=True, max_length=200)),
                ("city_name", models.CharField(blank=True, max_length=100)),
                (
                    "center_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "center_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("radius_km", models.IntegerField(blank=True, null=True)),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("EXTREME", "Extreme Risk - Do Not Travel"),
                            ("HIGH", "High Risk - Reconsider Travel"),
                            ("MODERATE", "Moderate Risk - Exercise Caution"),
                            ("LOW", "Low Risk - Normal Precautions"),
                        ],
                        max_length=20,
                    ),
                ),
                ("risk_description", models.TextField(blank=True)),
                ("advisory_source", models.CharField(blank=True, max_length=200)),
                ("advisory_url", models.URLField(blank=True)),
                ("advisory_date", models.DateField(blank=True, null=True)),
                ("approval_required", models.BooleanField(default=True)),
                ("allow_travel", models.BooleanField(default=False)),
                ("notify_immediately", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("effective_from", models.DateField()),
                ("effective_until", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="risk_destinations_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "notification_recipients",
                    models.ManyToManyField(
                        blank=True,
                        related_name="risk_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="high_risk_destinations",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "db_table": "high_risk_destinations",
            },
        ),
        migrations.CreateModel(
            name="ComplianceViolation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("violation_type", models.CharField(max_length=30)),
                ("violation_description", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("INFO", "Informational"),
                            ("WARNING", "Warning"),
                            ("BREACH", "Policy Breach"),
                            ("CRITICAL", "Critical Violation"),
                        ],
                        default="WARNING",
                        max_length=20,
                    ),
                ),
                (
                    "expected_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "actual_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "variance_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("currency", models.CharField(default="AUD", max_length=3)),
                ("detected_at", models.DateTimeField(auto_now_add=True)),
                ("detected_by", models.CharField(default="SYSTEM", max_length=50)),
                ("is_waived", models.BooleanField(default=False)),
                ("waived_at", models.DateTimeField(blank=True, null=True)),
                ("waiver_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="violations",
                        to="bookings.booking",
                    ),
                ),
                (
                    "compliance_rule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="violations",
                        to="compliance.compliancerule",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compliance_violations",
                        to="organizations.organization",
                    ),
                ),
                (
                    "traveller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="violations",
                        to="bookings.traveller",
                    ),
                ),
                (
                    "waived_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="violations_waived",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "compliance_violations",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ComplianceProcessingLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "processing_type",
                    models.CharField(
                        choices=[
                            ("IMPORT", "Import Time Processing"),
                            ("BATCH", "Batch Reprocessing"),
                            ("MANUAL", "Manual Update"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("RUNNING", "Running"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="RUNNING",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("booking_type", models.CharField(blank=True, max_length=20)),
                ("bookings_processed", models.IntegerField(default=0)),
                ("violations_detected", models.IntegerField(default=0)),
                ("violations_resolved", models.IntegerField(default=0)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "initiated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="compliance_runs_initiated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compliance_logs",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "db_table": "compliance_processing_logs",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="TravelRiskAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "alert_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Review"),
                            ("APPROVED", "Approved"),
                            ("DENIED", "Denied"),
                            ("CANCELLED", "Booking Cancelled"),
                            ("COMPLETED", "Travel Completed"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("risk_level_at_booking", models.CharField(max_length=20)),
                ("matched_location", models.CharField(max_length=200)),
                (
                    "distance_from_center_km",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("approval_requested_at", models.DateTimeField(auto_now_add=True)),
                ("approval_notes", models.TextField(blank=True)),
                ("approval_decision_at", models.DateTimeField(blank=True, null=True)),
                ("approval_comments", models.TextField(blank=True)),
                ("emergency_contact_verified", models.BooleanField(default=False)),
                ("travel_insurance_confirmed", models.BooleanField(default=False)),
                ("safety_briefing_completed", models.BooleanField(default=False)),
                ("traveller_notified", models.BooleanField(default=False)),
                ("traveller_notified_at", models.DateTimeField(blank=True, null=True)),
                ("admins_notified", models.BooleanField(default=False)),
                ("admins_notified_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="risk_approvals_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_alerts",
                        to="bookings.booking",
                    ),
                ),
                (
                    "high_risk_destination",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="travel_alerts",
                        to="compliance.highriskdestination",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="travel_risk_alerts",
                        to="organizations.organization",
                    ),
                ),
                (
                    "traveller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_alerts",
                        to="bookings.traveller",
                    ),
                ),
            ],
            options={
                "db_table": "travel_risk_alerts",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["organization", "alert_status"],
                        name="travel_risk_organiz_d7b893_idx",
                    ),
                    models.Index(
                        fields=["traveller", "alert_status"],
                        name="travel_risk_travell_0d7bd2_idx",
                    ),
                    models.Index(
                        fields=["booking"], name="travel_risk_booking_5003cb_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="travel_risk_created_ddcd98_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="highriskdestination",
            index=models.Index(
                fields=["organization", "is_active"],
                name="high_risk_d_organiz_431ed9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="highriskdestination",
            index=models.Index(
                fields=["country_code", "is_active"],
                name="high_risk_d_country_80e14b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="highriskdestination",
            index=models.Index(
                fields=["risk_level"], name="high_risk_d_risk_le_6575aa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="complianceviolation",
            index=models.Index(
                fields=["organization", "created_at"],
                name="compliance__organiz_e33184_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="complianceviolation",
            index=models.Index(
                fields=["booking"], name="compliance__booking_97ca9d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="complianceviolation",
            index=models.Index(
                fields=["violation_type", "severity"],
                name="compliance__violati_caf7a3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="complianceviolation",
            index=models.Index(
                fields=["is_waived"], name="compliance__is_waiv_9e7431_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="compliancerule",
            index=models.Index(
                fields=["organization", "is_active"],
                name="compliance__organiz_8d2b83_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="compliancerule",
            index=models.Index(
                fields=["rule_type", "product_type"],
                name="compliance__rule_ty_7bb368_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="complianceprocessinglog",
            index=models.Index(
                fields=["organization", "started_at"],
                name="compliance__organiz_485100_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="complianceprocessinglog",
            index=models.Index(
                fields=["status", "processing_type"],
                name="compliance__status_c09c34_idx",
            ),
        ),
    ]
